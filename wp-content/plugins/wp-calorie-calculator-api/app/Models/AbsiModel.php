<?php
namespace Calculator\Models;

use Calculator\Models\AbstractModel;
use Calculator\Helper\Data;
use Calculator\Models\BmiModel;

class AbsiModel extends AbstractModel
{
    /**
     * @var Data $helper
     */
    protected $helper;

    public function __construct()
    {
        $helper = new Data();
        $this->helper = $helper;

        $bmi = new BmiModel();
        $this->bmi = $bmi;
    }

    public function calculate($data)
    {

        $result['absi']['score'] = $this->absiCalculate($data);
        $result['absi']['zscore'] = $this->absiZScore($result['absi']['score'], $data['gender'], $data['age']);
        $result['absi']['description'] = $this->mortalityRisk($result['absi']['zscore']);
        return $result;
    }

    private function absiCalculate($data)
    {
        $bmiResult = $this->bmi->calculate($data);

        $height = $this->helper->metersConvert($data['height']);
        $waist = $this->helper->metersConvert($data['waist']);

        $bmiPow = pow($bmiResult['bmi']['bmi'], 2/3);
        $heightPow = pow($height, 1/2);

        $absi = $waist / ($bmiPow * $heightPow);
        $result = round($absi,5);

        return $result;
    }

    private function mortalityRisk($score)
    {
        if($score < -0.868)
        {
            $title = "Very low";
        }else if($score >= -0.868 && $score < -0.272)
        {
            $title = "Low";
        }else if($score >= -0.272 && $score < 0.229)
        {
            $title = "Average";
        }else if($score >= 0.229 && $score < 0.798){
            $title = "High";
        }else {
            $title = "Very high";
        }

        return $title;
    }
    private function absiZScore($absi, $gender, $age)
    {
        if($gender == 1)
        {
            $item = $this->maleAbsi($age);
        }else {
            $item = $this->femaleAbsi($age);
        }

        $absiScore = round(($absi - $item[0][1]) / $item[0][2],4);

        return $absiScore;
    }


    private function maleAbsi($age)
    {
        $data = [
            [2, 0.07778, 0.00312, 0.07890, 0.00384],
            [3, 0.07931, 0.00283, 0.07915, 0.00384],
            [4, 0.07932, 0.00300, 0.07937, 0.00383],
            [5, 0.08009, 0.00335, 0.07955, 0.00383],
            [6, 0.07989, 0.00362, 0.07964, 0.00382],
            [7, 0.07968, 0.00341, 0.07966, 0.00382],
            [8, 0.08063, 0.00415, 0.07958, 0.00382],
            [9, 0.08025, 0.00423, 0.07942, 0.00381],
            [10, 0.07969, 0.00408, 0.07917, 0.00381],
            [11, 0.07964, 0.00442, 0.07886, 0.00381],
            [12, 0.07953, 0.00438, 0.07849, 0.00380],
            [13, 0.07807, 0.00434, 0.07810, 0.00380],
            [14, 0.07712, 0.00436, 0.07772, 0.00380],
            [15, 0.07647, 0.00415, 0.07739, 0.00379],
            [16, 0.07583, 0.00379, 0.07716, 0.00379],
            [17, 0.07625, 0.00376, 0.07703, 0.00378],
            [18, 0.07665, 0.00361, 0.07702, 0.00378],
            [19, 0.07665, 0.00393, 0.07711, 0.00378],
            [20, 0.07715, 0.00410, 0.07728, 0.00377],
            [21, 0.07754, 0.00370, 0.07750, 0.00377],
            [22, 0.07861, 0.00452, 0.07777, 0.00377],
            [23, 0.07839, 0.00364, 0.07804, 0.00376],
            [24, 0.07794, 0.00363, 0.07831, 0.00376],
            [25, 0.07880, 0.00354, 0.07858, 0.00376],
            [26, 0.07895, 0.00381, 0.07882, 0.00375],
            [27, 0.07936, 0.00402, 0.07904, 0.00375],
            [28, 0.07999, 0.00387, 0.07922, 0.00374],
            [29, 0.07944, 0.00381, 0.07938, 0.00374],
            [30, 0.07949, 0.00370, 0.07951, 0.00374],
            [31, 0.07890, 0.00317, 0.07963, 0.00373],
            [32, 0.07922, 0.00374, 0.07975, 0.00373],
            [33, 0.08010, 0.00408, 0.07988, 0.00373],
            [34, 0.07977, 0.00367, 0.08000, 0.00372],
            [35, 0.08039, 0.00358, 0.08013, 0.00372],
            [36, 0.07966, 0.00397, 0.08027, 0.00371],
            [37, 0.07999, 0.00381, 0.08042, 0.00371],
            [38, 0.08031, 0.00367, 0.08057, 0.00371],
            [39, 0.08114, 0.00363, 0.08072, 0.00370],
            [40, 0.08089, 0.00354, 0.08087, 0.00370],
            [41, 0.08127, 0.00335, 0.08102, 0.00370],
            [42, 0.08122, 0.00347, 0.08117, 0.00369],
            [43, 0.08084, 0.00339, 0.08132, 0.00369],
            [44, 0.08110, 0.00327, 0.08148, 0.00368],
            [45, 0.08140, 0.00332, 0.08165, 0.00368],
            [46, 0.08272, 0.00426, 0.08183, 0.00368],
            [47, 0.08176, 0.00306, 0.08201, 0.00367],
            [48, 0.08119, 0.00323, 0.08221, 0.00367],
            [49, 0.08272, 0.00400, 0.08240, 0.00367],
            [50, 0.08322, 0.00333, 0.08260, 0.00366],
            [51, 0.08261, 0.00385, 0.08279, 0.00366],
            [52, 0.08281, 0.00360, 0.08297, 0.00365],
            [53, 0.08272, 0.00399, 0.08315, 0.00365],
            [54, 0.08324, 0.00356, 0.08334, 0.00365],
            [55, 0.08388, 0.00406, 0.08352, 0.00364],
            [56, 0.08321, 0.00386, 0.08369, 0.00364],
            [57, 0.08529, 0.00393, 0.08386, 0.00364],
            [58, 0.08374, 0.00344, 0.08403, 0.00363],
            [59, 0.08343, 0.00354, 0.08419, 0.00363],
            [60, 0.08392, 0.00354, 0.08436, 0.00362],
            [61, 0.08487, 0.00354, 0.08454, 0.00362],
            [62, 0.08455, 0.00348, 0.08471, 0.00362],
            [63, 0.08513, 0.00352, 0.08489, 0.00361],
            [64, 0.08489, 0.00275, 0.08506, 0.00361],
            [65, 0.08547, 0.00343, 0.08522, 0.00360],
            [66, 0.08583, 0.00343, 0.08537, 0.00360],
            [67, 0.08518, 0.00324, 0.08551, 0.00360],
            [68, 0.08565, 0.00298, 0.08565, 0.00359],
            [69, 0.08633, 0.00382, 0.08578, 0.00359],
            [70, 0.08534, 0.00387, 0.08591, 0.00359],
            [71, 0.08603, 0.00356, 0.08604, 0.00358],
            [72, 0.08635, 0.00364, 0.08616, 0.00358],
            [73, 0.08605, 0.00325, 0.08629, 0.00357],
            [74, 0.08648, 0.00387, 0.08641, 0.00357],
            [75, 0.08713, 0.00363, 0.08653, 0.00357],
            [76, 0.08671, 0.00313, 0.08665, 0.00356],
            [77, 0.08691, 0.00348, 0.08675, 0.00356],
            [78, 0.08592, 0.00383, 0.08685, 0.00355],
            [79, 0.08745, 0.00361, 0.08695, 0.00355],
            [80, 0.08759, 0.00384, 0.08705, 0.00355],
            [81, 0.08714, 0.00395, 0.08714, 0.00354],
            [82, 0.08713, 0.00370, 0.08723, 0.00354],
            [83, 0.08714, 0.00342, 0.08732, 0.00354],
            [84, 0.08763, 0.00385, 0.08742, 0.00353],
            [85, 0.08811, 0.00356, 0.08811, 0.00356],
        ];

        $items =  array_filter($data, function ($item) use ($age) {
            return $item[0] == $age;
        });

        return array_values($items);
    }

    private function femaleAbsi($age)
    {
        $data = [
            [2, 0.07922, 0.00319, 0.08031, 0.00363],
            [3, 0.08000, 0.00303, 0.08016, 0.00366],
            [4, 0.08045, 0.00280, 0.08001, 0.00369],
            [5, 0.08085, 0.00327, 0.07985, 0.00372],
            [6, 0.08006, 0.00338, 0.07969, 0.00375],
            [7, 0.08013, 0.00333, 0.07952, 0.00378],
            [8, 0.08039, 0.00388, 0.07935, 0.00380],
            [9, 0.08016, 0.00370, 0.07917, 0.00383],
            [10, 0.07914, 0.00378, 0.07899, 0.00386],
            [11, 0.07934, 0.00400, 0.07881, 0.00389],
            [12, 0.07825, 0.00403, 0.07863, 0.00392],
            [13, 0.07807, 0.00439, 0.07846, 0.00395],
            [14, 0.07762, 0.00441, 0.07829, 0.00397],
            [15, 0.07701, 0.00391, 0.07814, 0.00400],
            [16, 0.07739, 0.00399, 0.07799, 0.00403],
            [17, 0.07714, 0.00394, 0.07787, 0.00406],
            [18, 0.07705, 0.00413, 0.07775, 0.00408],
            [19, 0.07743, 0.00419, 0.07765, 0.00411],
            [20, 0.07712, 0.00465, 0.07757, 0.00414],
            [21, 0.07786, 0.00415, 0.07750, 0.00416],
            [22, 0.07728, 0.00430, 0.07744, 0.00419],
            [23, 0.07726, 0.00463, 0.07740, 0.00422],
            [24, 0.07771, 0.00490, 0.07737, 0.00424],
            [25, 0.07699, 0.00407, 0.07735, 0.00427],
            [26, 0.07719, 0.00543, 0.07734, 0.00429],
            [27, 0.07756, 0.00450, 0.07735, 0.00432],
            [28, 0.07772, 0.00468, 0.07736, 0.00435],
            [29, 0.07744, 0.00402, 0.07739, 0.00437],
            [30, 0.07703, 0.00421, 0.07743, 0.00440],
            [31, 0.07714, 0.00478, 0.07747, 0.00442],
            [32, 0.07738, 0.00484, 0.07752, 0.00445],
            [33, 0.07786, 0.00474, 0.07759, 0.00447],
            [34, 0.07779, 0.00459, 0.07766, 0.00450],
            [35, 0.07756, 0.00452, 0.07773, 0.00452],
            [36, 0.07854, 0.00425, 0.07782, 0.00454],
            [37, 0.07815, 0.00396, 0.07790, 0.00457],
            [38, 0.07861, 0.00500, 0.07800, 0.00459],
            [39, 0.07779, 0.00480, 0.07810, 0.00462],
            [40, 0.07790, 0.00462, 0.07820, 0.00464],
            [41, 0.07892, 0.00403, 0.07831, 0.00466],
            [42, 0.07833, 0.00463, 0.07842, 0.00469],
            [43, 0.07882, 0.00493, 0.07854, 0.00471],
            [44, 0.07774, 0.00498, 0.07866, 0.00473],
            [45, 0.07860, 0.00462, 0.07879, 0.00476],
            [46, 0.07900, 0.00386, 0.07892, 0.00478],
            [47, 0.07916, 0.00477, 0.07905, 0.00480],
            [48, 0.07888, 0.00542, 0.07919, 0.00483],
            [49, 0.07978, 0.00464, 0.07933, 0.00485],
            [50, 0.07894, 0.00506, 0.07947, 0.00487],
            [51, 0.08039, 0.00436, 0.07962, 0.00489],
            [52, 0.08068, 0.00471, 0.07977, 0.00492],
            [53, 0.07941, 0.00420, 0.07992, 0.00494],
            [54, 0.08054, 0.00541, 0.08007, 0.00496],
            [55, 0.07872, 0.00498, 0.08023, 0.00498],
            [56, 0.08000, 0.00566, 0.08039, 0.00501],
            [57, 0.08025, 0.00504, 0.08055, 0.00503],
            [58, 0.08204, 0.00491, 0.08072, 0.00505],
            [59, 0.08038, 0.00481, 0.08088, 0.00507],
            [60, 0.08094, 0.00514, 0.08105, 0.00509],
            [61, 0.08183, 0.00478, 0.08122, 0.00511],
            [62, 0.08146, 0.00448, 0.08139, 0.00514],
            [63, 0.08226, 0.00471, 0.08156, 0.00516],
            [64, 0.08120, 0.00556, 0.08174, 0.00518],
            [65, 0.08148, 0.00604, 0.08191, 0.00520],
            [66, 0.08148, 0.00566, 0.08208, 0.00522],
            [67, 0.08283, 0.00486, 0.08226, 0.00524],
            [68, 0.08228, 0.00544, 0.08243, 0.00526],
            [69, 0.08209, 0.00528, 0.08261, 0.00528],
            [70, 0.08316, 0.00485, 0.08278, 0.00530],
            [71, 0.08394, 0.00501, 0.08296, 0.00533],
            [72, 0.08246, 0.00563, 0.08313, 0.00535],
            [73, 0.08495, 0.00495, 0.08330, 0.00537],
            [74, 0.08342, 0.00443, 0.08346, 0.00539],
            [75, 0.08276, 0.00449, 0.08363, 0.00541],
            [76, 0.08464, 0.00501, 0.08380, 0.00543],
            [77, 0.08539, 0.00500, 0.08396, 0.00545],
            [78, 0.08332, 0.00611, 0.08412, 0.00547],
            [79, 0.08376, 0.00585, 0.08428, 0.00549],
            [80, 0.08543, 0.00598, 0.08444, 0.00551],
            [81, 0.08406, 0.00567, 0.08460, 0.00553],
            [82, 0.08355, 0.00641, 0.08476, 0.00555],
            [83, 0.08542, 0.00611, 0.08492, 0.00557],
            [84, 0.08407, 0.00484, 0.08508, 0.00559],
            [85, 0.08533, 0.00528, 0.08533, 0.00528]
        ];

        $items =  array_filter($data, function ($item) use ($age) {
            return $item[0] == $age;
        });

        return array_values($items);
    }
}