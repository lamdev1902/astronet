"use strict";
function _toConsumableArray(e) {
    return _arrayWithoutHoles(e) || _iterableToArray(e) || _unsupportedIterableToArray(e) || _nonIterableSpread();
}
function _nonIterableSpread() {
    throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray(e, t) {
    if (e) {
        if ("string" == typeof e) return _arrayLikeToArray(e, t);
        var i = Object.prototype.toString.call(e).slice(8, -1);
        return "Map" === (i = "Object" === i && e.constructor ? e.constructor.name : i) || "Set" === i ? Array.from(e) : "Arguments" === i || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(i) ? _arrayLikeToArray(e, t) : void 0;
    }
}
function _iterableToArray(e) {
    if (("undefined" != typeof Symbol && null != e[Symbol.iterator]) || null != e["@@iterator"]) return Array.from(e);
}
function _arrayWithoutHoles(e) {
    if (Array.isArray(e)) return _arrayLikeToArray(e);
}
function _arrayLikeToArray(e, t) {
    (null == t || t > e.length) && (t = e.length);
    for (var i = 0, o = new Array(t); i < t; i++) o[i] = e[i];
    return o;
}
function _typeof(e) {
    return (_typeof =
        "function" == typeof Symbol && "symbol" == typeof Symbol.iterator
            ? function (e) {
                  return typeof e;
              }
            : function (e) {
                  return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e;
              })(e);
}
function ownKeys(t, e) {
    var i,
        o = Object.keys(t);
    return (
        Object.getOwnPropertySymbols &&
            ((i = Object.getOwnPropertySymbols(t)),
            e &&
                (i = i.filter(function (e) {
                    return Object.getOwnPropertyDescriptor(t, e).enumerable;
                })),
            o.push.apply(o, i)),
        o
    );
}
function _objectSpread(t) {
    for (var e = 1; e < arguments.length; e++) {
        var i = null != arguments[e] ? arguments[e] : {};
        e % 2
            ? ownKeys(Object(i), !0).forEach(function (e) {
                  _defineProperty(t, e, i[e]);
              })
            : Object.getOwnPropertyDescriptors
            ? Object.defineProperties(t, Object.getOwnPropertyDescriptors(i))
            : ownKeys(Object(i)).forEach(function (e) {
                  Object.defineProperty(t, e, Object.getOwnPropertyDescriptor(i, e));
              });
    }
    return t;
}
function _defineProperty(e, t, i) {
    return t in e ? Object.defineProperty(e, t, { value: i, enumerable: !0, configurable: !0, writable: !0 }) : (e[t] = i), e;
}
function _classCallCheck(e, t) {
    if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function");
}
function _defineProperties(e, t) {
    for (var i = 0; i < t.length; i++) {
        var o = t[i];
        (o.enumerable = o.enumerable || !1), (o.configurable = !0), "value" in o && (o.writable = !0), Object.defineProperty(e, o.key, o);
    }
}
function _createClass(e, t, i) {
    return t && _defineProperties(e.prototype, t), i && _defineProperties(e, i), e;
}
!(function (_) {
    _(document).ready(function () {
        var u = 0.45359237,
            h = 30.48,
            d = 2.54;
        function e() {
            var i = _(".wp-calorie-calculator-result-count");

            i.each(function(index) {
               var  e = a(this.id);
               var $this = this;
                _(this).get(0) &&
                e &&
                0 < e &&
                jQuery({ Counter: 0 }).animate(
                    { Counter: e },
                    {
                        duration: 600,
                        easing: "swing",
                        step: function (e, t) {
                            _($this).text(Math.ceil(e));
                        },
                        done: function () {
                            _($this).text(this.Counter);
                        },
                    }
                );
1            })
                
        }
        function a(goal) {
            var e = _("[name=wpcc-metric-system]").is(":checked"),
                t = _("[name=wpcc-gender]").val(),
                i = +_("[name=wpcc-age]").val(),
                o = +_("[name=wpcc-height]").val(),
                n = +_("[name=wpcc-height-2]").val(),
                c = +_("[name=wpcc-weight]").val(),
                s = _("[name=wpcc-activity]:checked").val(),
                a = _(`[name=${goal}]`).val(),
                r = 0;
            if (!(t && i && o && c)) return 0;
            e || ((c *= u), (o = o * h + n * d));
            var r = "male" == t ? 5 : -161,
                l = s.split("%-%")[1],
                a = a.split("%-%"),
                p = parseFloat(a[1]);
            return Math.round((10 * c + 6.25 * o - 5 * i + r) * l * p) || 0;
        }
        function t(e) {
            var n = [],
                c = _("[name=wpcc-metric-system]").is(":checked");
            !e || ("wpcc-age" != e.name && "wpcc-height" != e.name && "wpcc-weight" != e.name)
                ? (n.push(document.getElementById("wpcc-age")), n.push(document.getElementById("wpcc-height")), n.push(document.getElementById("wpcc-weight")))
                : n.push(e);
            for (var s = 0; s < n.length; s++)
                n[s] &&
                    (function () {
                        if ("" == n[s].value) return;
                        var e = n[s],
                            t = +e.value,
                            i = 0,
                            o = 0;
                        "wpcc-age" == e.name ? ((i = 1), (o = 150)) : "wpcc-height" == e.name ? ((i = 1), (o = 300), c || ((i = 1), (o = 9))) : "wpcc-weight" == e.name && ((i = 1), (o = 300), c || ((i = 1), (o = 661))),
                            i &&
                                o &&
                                (t < i
                                    ? (_(e).addClass("wpcc-wrong"),
                                      setTimeout(function () {
                                          (e.value = i), _(e).removeClass("wpcc-wrong");
                                      }, 1e3))
                                    : o < t &&
                                      (_(e).addClass("wpcc-wrong"),
                                      setTimeout(function () {
                                          (e.value = o), _(e).removeClass("wpcc-wrong");
                                      }, 1e3)));
                    })();
        }
        _(".wp-calorie-calculator").each(function () {
            var e = _(this).data("colors");
            if (e)
                for (var t in e) {
                    var i = (function (e) {
                        "#" == e.substring(0, 1) && (e = e.substring(1));
                        return parseInt(e.substring(0, 2), 16) + "," + parseInt(e.substring(2, 4), 16) + "," + parseInt(e.substring(4), 16);
                    })(e[t]);
                    document.documentElement.style.setProperty("--wpcc-" + t, i);
                }
        }),
            _.fn.customSelect &&
                ((i = _(".wpcc-sex-placeholder").val()),
                _(".select-sex").customSelect({ block: "wp-calorie-calculator-select", includeValue: !0, placeholder: '<span class="wpcc-select__placeholder">' + i + "</span>" }),
                _(".select-value").customSelect({ block: "wp-calorie-calculator-select", includeValue: !0 }),
                _(".select-sex").on("change", function () {
                    _(".wpcc-sex .wp-calorie-calculator-select__option.wp-calorie-calculator-select__option--value").removeClass("wpcc-empty");
                })),
            _(".wpcc-switch-option").click(function () {

                var position = this.getAttribute('data-position');
                if(this.classList.contains('not-selected')){
                    this.classList.remove('not-selected');
                    this.classList.add('selected');

                    if(position === 'right'){
                        this.previousElementSibling.classList.remove('selected');
                        this.previousElementSibling.classList.add('not-selected');
                    }else {
                        this.nextElementSibling.classList.remove('selected');
                        this.nextElementSibling.classList.add('not-selected');
                    }
                }

                

                var e = _(this).data("position"),
                    t = _(this).parent().find("input");
                "left" == e ? t.prop("checked", !1) : t.prop("checked", !0), t.trigger("change");
            }),
            _("[name=wpcc-metric-system]").change(function () {
                _("[type=number]").removeClass("wpcc-empty"),
                    this.checked
                        ? (_("[name=wpcc-height-2]").parent().hide(), _("[name=wpcc-height] + .wpcc-input-placeholder").text("cm"), _("[name=wpcc-weight] + .wpcc-input-placeholder").text("kg"), _(".wpcc-metric").removeClass("imperial"))
                        : (_("[name=wpcc-height-2]").parent().show(), _("[name=wpcc-height] + .wpcc-input-placeholder").text("ft"), _("[name=wpcc-weight] + .wpcc-input-placeholder").text("lbs"), _(".wpcc-metric").addClass("imperial")),
                    (function (e) {
                        {
                            var t, i;
                            e
                                ? ((t = +_("[name=wpcc-weight]").val()) && _("[name=wpcc-weight]").val(Math.round(t * u)),
                                  (i = +_("[name=wpcc-height]").val()),
                                  (e = +_("[name=wpcc-height-2]").val()),
                                  (i || e) && ((e = i * h + e * d), _("[name=wpcc-height]").val(Math.round(e))))
                                : ((t = +_("[name=wpcc-weight]").val()) && _("[name=wpcc-weight]").val(Math.round(t / u)),
                                  (i = +_("[name=wpcc-height]").val()) && ((t = Math.floor(i / h)), (i = ((i - t * h) / d).toFixed(1)), _("[name=wpcc-height]").val(t), _("[name=wpcc-height-2]").val(i)));
                        }
                    })(this.checked),
                    t(),
                    e();
            }),
            _(".wp-calorie-calculator input[type=number]").on("change", function () {
                t(this);
            }),
            _(".wp-calorie-calculator #wpcc_user_acceptance input").on("change", function () {
                _("#wpcc_user_acceptance").removeClass("wpcc-empty");
            }),
            _(".wp-calorie-calculator input").on("input propertychange", function () {
                e();
            }),
            _(".wp-calorie-calculator select").on("change", function () {
                e();
            }),
            _(".wpcc-result-form").submit(function (e) {
                e.preventDefault();
                var t = _(this),
                    i = _(".wpcc-result-form-notice"),
                    o = _("#wpcc_metric"),
                    n = t.parents(".wp-calorie-calculator"),
                    c = n.find("[name=wpcc_user_acceptance]");
                c.length && (c.is(":checked") ? _("#wpcc_user_acceptance").removeClass("wpcc-empty") : _("#wpcc_user_acceptance").addClass("wpcc-empty"));
                var s = n.find("[name=wpcc-goal]").val().split("%-%")[0],
                    e = n.find("[name=wpcc-activity]:checked").val().split("%-%")[0],
                    s = {
                        metric_system: _("[name=wpcc-metric-system]").is(":checked"),
                        gender: _("[name=wpcc-gender]").val(),
                        age: +_("[name=wpcc-age]").val(),
                        height: +_("[name=wpcc-height]").val(),
                        height2: +_("[name=wpcc-height-2]").val(),
                        weight: +_("[name=wpcc-weight]").val(),
                        activity: e,
                        goal: s,
                    };
                s.gender || _(".wpcc-sex .wp-calorie-calculator-select__option--value").addClass("wpcc-empty"),
                    0 == s.age && n.find("[name=wpcc-age]").addClass("wpcc-empty"),
                    0 == s.height && n.find("[name=wpcc-height]").addClass("wpcc-empty"),
                    0 == s.height2 && n.find("[name=wpcc-height-2]").addClass("wpcc-empty"),
                    0 == s.weight && n.find("[name=wpcc-weight]").addClass("wpcc-empty");
                s = { action: "wpcc_send_result", user_email: _(".wpcc-result-form-email").val(), result: a(), fields: s };
                (c.length && !c.is(":checked")) ||
                    (s.result
                        ? (t.find("button").addClass("wpcc-loading"),
                          _.post(t.attr("action"), s, function (e) {
                              t.find("button").removeClass("wpcc-loading"),
                                  (e = JSON.parse(e)).user_email_sent
                                      ? (i.html("<span>" + window.wpCalorieCalculatorI18n.emailSendSuccess + "</span>"), i.removeClass("wpcc-error").addClass("wpcc-success"))
                                      : (i.html("<span>" + window.wpCalorieCalculatorI18n.emailSendFail + "</span>"), i.removeClass("wpcc-success").addClass("wpcc-error"));
                          }))
                        : (i.html("<span>" + window.wpCalorieCalculatorI18n.emptyFields + "</span>"), i.removeClass("wpcc-success").addClass("wpcc-error"), _("html, body").animate({ scrollTop: o.offset().top - 50 }, 1200)));
            }),
            _(':input[type="number"]').each(function (e, t) {
                _(this).keypress(function (e) {
                    var t = void 0 === (e = e || window.event).which ? e.keyCode : e.which;
                    String.fromCharCode(t).match(/^[0-9]+$/) || e.preventDefault();
                });
            });
        var i = _(':input[type="number"]');
        i.on("focus", function () {
            _(this).data("originalValue", _(this).val());
        }),
            i.on("keyup", function () {
                "0" == _(this).val().trim() && _(this).val(""), 0 != _(this).val() ? _(this).removeClass("wpcc-empty") : _(this).addClass("wpcc-empty");
            });
    });
})(jQuery);
var CustomSelect = (function (a) {
    var i = { block: "custom-select", hideCallback: !1, includeValue: !1, keyboard: !0, modifier: !1, placeholder: !1, search: !1, showCallback: !1, transition: 0 },
        e = (function () {
            function o(e, t) {
                _classCallCheck(this, o),
                    (this._$select = a(e)),
                    (this._options = _objectSpread(_objectSpread({}, i), "object" === _typeof(t) ? t : {})),
                    (this._activeModifier = "".concat(this._options.block, "--active")),
                    (this._dropupModifier = "".concat(this._options.block, "--dropup")),
                    (this._optionSelectedModifier = "".concat(this._options.block, "__option--selected")),
                    (this._keydown = this._keydown.bind(this)),
                    (this._dropup = this._dropup.bind(this)),
                    (this._outside = this._outside.bind(this)),
                    this._init();
            }
            return (
                _createClass(
                    o,
                    [
                        {
                            key: "reset",
                            value: function () {
                                this._$dropdown.hide().empty(), this._$value.off("click"), this._fill();
                            },
                        },
                        {
                            key: "_init",
                            value: function () {
                                (this._$element = a(
                                    '<div class="'
                                        .concat(this._options.block, '">\n           <button class="')
                                        .concat(this._options.block, "__option ")
                                        .concat(this._options.block, '__option--value" type="button"></button>\n           <div class="')
                                        .concat(this._options.block, '__dropdown" style="display: none;"></div>\n         </div>')
                                )),
                                    this._$select.hide().after(this._$element),
                                    this._options.modifier && this._$element.addClass(this._options.modifier),
                                    (this._$value = this._$element.find(".".concat(this._options.block, "__option--value"))),
                                    (this._$dropdown = this._$element.find(".".concat(this._options.block, "__dropdown"))),
                                    this._fill();
                            },
                        },
                        {
                            key: "_fill",
                            value: function () {
                                var c = this;
                                (this._$values = this._$select.find("option")), (this._values = []);
                                var s = this._options.placeholder;
                                a.each(this._$values, function (e, t) {
                                    t = a(t).text().trim();
                                    c._values.push(t);
                                }),
                                    s && (this._$select.find("[selected]").length ? (s = !1) : (this._$value.html(s), this._$select.prop("selectedIndex", -1))),
                                    a.each(this._values, function (e, t) {
                                        var i = c._$values.eq(e).attr("class"),
                                            o = a('<button class="'.concat(c._options.block, '__option" type="button">').concat(t, "</button>")),
                                            n = c._$select.find(":selected");
                                        c._$values.eq(e).attr("disabled") && o.prop("disabled", !0),
                                            (!n.length && 0 === e) || t === n.text().trim()
                                                ? (s || c._$value.text(t).removeClass(c._$value.data("class")).removeData("class").addClass(i).data("class", i),
                                                  (c._options.includeValue || s) && (o.addClass(i), o.toggleClass(c._optionSelectedModifier, c._$values.eq(e).is("[selected]")), c._$dropdown.append(o)))
                                                : (o.addClass(i), c._$dropdown.append(o));
                                    }),
                                    (this._$options = this._$dropdown.find(".".concat(this._options.block, "__option"))),
                                    this._options.search && this._search(),
                                    this._$value.one("click", function (e) {
                                        c._show(e);
                                    }),
                                    this._$value.prop("disabled", !this._$options.length),
                                    this._$options.on("click", function (e) {
                                        c._select(e);
                                    });
                            },
                        },
                        {
                            key: "_show",
                            value: function (e) {
                                var t = this;
                                e.preventDefault(),
                                    this._dropup(),
                                    a(window).on("resize scroll", this._dropup),
                                    this._$element.addClass(this._activeModifier),
                                    this._$dropdown.slideDown(this._options.transition, function () {
                                        t._options.search && (t._$input.focus(), t._options.includeValue && t._scroll()), "function" == typeof t._options.showCallback && t._options.showCallback.call(t._$element[0]);
                                    }),
                                    setTimeout(function () {
                                        a(document).on("touchstart click", t._outside);
                                    }, 0),
                                    this._$value.one("click", function (e) {
                                        e.preventDefault(), t._hide();
                                    }),
                                    this._options.keyboard && ((this._options.index = -1), a(window).on("keydown", this._keydown));
                            },
                        },
                        {
                            key: "_hide",
                            value: function () {
                                var t = this;
                                this._options.search && (this._$input.val("").blur(), this._$options.show(), this._$wrap.scrollTop(0)),
                                    this._$dropdown.slideUp(this._options.transition, function () {
                                        t._$element.removeClass(t._activeModifier).removeClass(t._dropupModifier),
                                            "function" == typeof t._options.hideCallback && t._options.hideCallback.call(t._$element[0]),
                                            t._$value.off("click").one("click", function (e) {
                                                t._show(e);
                                            }),
                                            a(document).off("touchstart click", t._outside),
                                            a(window).off("resize scroll", t._dropup);
                                    }),
                                    this._options.keyboard && (this._$options.blur(), a(window).off("keydown", this._keydown));
                            },
                        },
                        {
                            key: "_scroll",
                            value: function () {
                                var o = this;
                                a.each(this._$options, function (e, t) {
                                    var i = a(t);
                                    if (i.text() === o._$value.text()) {
                                        (t = i.position().top), (i = o._$wrap.outerHeight() / 2 - i.outerHeight() / 2);
                                        return i < t && o._$wrap.scrollTop(t - i), !1;
                                    }
                                });
                            },
                        },
                        {
                            key: "_select",
                            value: function (e) {
                                var o = this;
                                e.preventDefault();
                                var t,
                                    n = a(e.currentTarget).text().trim(),
                                    c = _toConsumableArray(this._values);
                                this._$value.text(n).removeClass(this._$value.data("class")),
                                    this._$values.prop("selected", !1),
                                    a.each(c, function (e, t) {
                                        o._options.includeValue || t !== n || c.splice(e, 1),
                                            a.each(o._$values, function (e, t) {
                                                var i = a(t);
                                                i.text().trim() === n && ((t = i.attr("class")), i.prop("selected", !0), o._$value.addClass(t).data("class", t));
                                            });
                                    }),
                                    this._hide(),
                                    this._options.includeValue
                                        ? (this._$options.removeClass(this._optionSelectedModifier),
                                          a.each(this._$options, function (e, t) {
                                              t = a(t);
                                              if (t.text().trim() === n) return t.addClass(o._optionSelectedModifier), !1;
                                          }))
                                        : (this._$options.length > c.length && ((t = this._$options.eq(c.length)).remove(), (this._$options = this._$options.not(t)), this._$options.length || this._$value.prop("disabled", !0)),
                                          a.each(this._$options, function (t, e) {
                                              var i = a(e);
                                              i.text(c[t]),
                                                  i.attr("class", "".concat(o._options.block, "__option")),
                                                  a.each(o._$values, function () {
                                                      var e = a(this);
                                                      e.text().trim() === c[t] && (i.addClass(e.attr("class")), i.prop("disabled", e.prop("disabled")));
                                                  });
                                          })),
                                    void 0 !== e.originalEvent && this._$select.trigger("change");
                            },
                        },
                        {
                            key: "_search",
                            value: function () {
                                var e = this;
                                (this._$input = a('<input class="'.concat(this._options.block, '__input" autocomplete="off">'))),
                                    this._$dropdown.prepend(this._$input),
                                    this._$options.wrapAll('<div class="'.concat(this._options.block, '__option-wrap"></div>')),
                                    (this._$wrap = this._$element.find(".".concat(this._options.block, "__option-wrap"))),
                                    this._$input.on("focus", function () {
                                        e._options.index = -1;
                                    }),
                                    this._$input.on("keyup", function () {
                                        var o = e._$input.val().trim();
                                        o.length
                                            ? (e._$wrap.scrollTop(0),
                                              setTimeout(function () {
                                                  o === e._$input.val().trim() &&
                                                      a.each(e._$options, function (e, t) {
                                                          var i = a(t),
                                                              t = -1 !== i.text().trim().toLowerCase().indexOf(o.toLowerCase());
                                                          i.toggle(t);
                                                      });
                                              }, 300))
                                            : e._$options.show();
                                    });
                            },
                        },
                        {
                            key: "_dropup",
                            value: function () {
                                var e = this._$element[0].getBoundingClientRect().bottom,
                                    e = a(window).height() - e < this._$dropdown.height();
                                this._$element.toggleClass(this._dropupModifier, e);
                            },
                        },
                        {
                            key: "_outside",
                            value: function (e) {
                                e = a(e.target);
                                e.parents().is(this._$element) || e.is(this._$element) || this._hide();
                            },
                        },
                        {
                            key: "_keydown",
                            value: function (e) {
                                var t,
                                    i = this._$options.filter(":visible").not("[disabled]");
                                switch (e.which) {
                                    case 40:
                                        e.preventDefault(), i.eq(this._options.index + 1).length ? (this._options.index += 1) : (this._options.index = 0), i.eq(this._options.index).focus();
                                        break;
                                    case 38:
                                        e.preventDefault(), i.eq(this._options.index - 1).length && 0 <= this._options.index - 1 ? --this._options.index : (this._options.index = i.length - 1), i.eq(this._options.index).focus();
                                        break;
                                    case 13:
                                    case 32:
                                        (this._$input && this._$input.is(":focus")) ||
                                            (e.preventDefault(), (t = this._$options.add(this._$value).filter(":focus")).trigger("click"), t.is(this._$value) || this._$select.trigger("change"), this._$value.focus());
                                        break;
                                    case 27:
                                        e.preventDefault(), this._hide(), this._$value.focus();
                                }
                            },
                        },
                    ],
                    [
                        {
                            key: "_jQueryPlugin",
                            value: function (i) {
                                return this.each(function () {
                                    var e = a(this),
                                        t = e.data("custom-select");
                                    t ? "reset" === i && t.reset() : "string" != typeof i && ((t = new o(this, i)), e.data("custom-select", t));
                                });
                            },
                        },
                    ]
                ),
                o
            );
        })();
    return (
        (a.fn.customSelect = e._jQueryPlugin),
        (a.fn.customSelect.noConflict = function () {
            return a.fn.customSelect;
        }),
        e
    );
})(jQuery);
